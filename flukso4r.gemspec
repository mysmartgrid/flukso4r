# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run 'rake gemspec'
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{flukso4r}
  s.version = "0.3.8"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = [%q{Mathias Dalheimer}]
  s.date = %q{2011-11-09}
  s.description = %q{This gem provides a library for the Flukso API. See http://flukso.net for more information.}
  s.email = %q{md@gonium.net}
  s.executables = [%q{flukso_archive_watts}, %q{flukso_create_db}, %q{flukso_export_db}, %q{flukso_query}]
  s.extra_rdoc_files = [
    "LICENSE",
    "README.rdoc"
  ]
  s.files = [
    "LICENSE",
    "README.rdoc",
    "Rakefile",
    "VERSION",
    "etc/flukso4rrc",
    "lib/flukso.rb",
    "lib/flukso/R.rb",
    "lib/flukso/api.rb",
    "lib/flukso/database.rb",
    "lib/flukso/export.rb",
    "lib/flukso/http_auth.rb",
    "lib/flukso/plots.rb",
    "lib/flukso/reading.rb",
    "lib/flukso/request.rb",
    "test/helper.rb",
    "test/test_flukso4r.rb"
  ]
  s.homepage = %q{http://gonium.net/md/flukso4r}
  s.require_paths = [%q{lib}]
  s.rubygems_version = %q{1.8.6}
  s.summary = %q{A Ruby Library for the Flukso Webservice}

  if s.respond_to? :specification_version then
    s.specification_version = 3

    if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<httparty>, [">= 0"])
      s.add_runtime_dependency(%q<crack>, [">= 0"])
      s.add_runtime_dependency(%q<sqlite3-ruby>, [">= 0"])
      s.add_development_dependency(%q<shoulda>, [">= 0"])
    else
      s.add_dependency(%q<httparty>, [">= 0"])
      s.add_dependency(%q<crack>, [">= 0"])
      s.add_dependency(%q<sqlite3-ruby>, [">= 0"])
      s.add_dependency(%q<shoulda>, [">= 0"])
    end
  else
    s.add_dependency(%q<httparty>, [">= 0"])
    s.add_dependency(%q<crack>, [">= 0"])
    s.add_dependency(%q<sqlite3-ruby>, [">= 0"])
    s.add_dependency(%q<shoulda>, [">= 0"])
  end
end

